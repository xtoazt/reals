
{
  "rules": {
    "users": {
      "$uid": {
        ".read": "auth != null",
        ".write": "auth != null && auth.uid === $uid",
        ".validate": "newData.hasChildren(['uid', 'username', 'displayName', 'email', 'status']) && newData.child('username').isString() && newData.child('username').val().length >= 3 && newData.child('username').val().length <= 30 && newData.child('username').val().matches(/^[a-zA-Z0-9_]+$/) && newData.child('displayName').isString() && newData.child('displayName').val().length >= 3 && newData.child('displayName').val().length <= 30 && newData.child('displayName').val().matches(/^[a-zA-Z0-9_]+$/) ",
        "uid": { ".validate": "newData.isString() && newData.val() === $uid" },
        "username": { ".validate": "newData.isString() && newData.val().length >= 3 && newData.val().length <= 30 && newData.val().matches(/^[a-zA-Z0-9_]+$/)" },
        "displayName": { ".validate": "newData.isString() && newData.val().length >= 3 && newData.val().length <= 30 && newData.val().matches(/^[a-zA-Z0-9_]+$/)" },
        "email": { ".validate": "newData.isString() && newData.val().length > 0" },
        "avatar": { ".validate": "newData.isString()" },
        "banner": { ".validate": "newData.isString()" },
        "status": { ".validate": "newData.isString() && newData.val().length <= 1000" },
        "nameColor": { ".validate": "!newData.exists() || (newData.isString() && newData.val().matches(/^#[0-9A-Fa-f]{6}$/))" },
        "title": { ".validate": "!newData.exists() || (newData.isString() && newData.val().length <= 50)" },
        "isShinyGold": { ".validate": "!newData.exists() || newData.isBoolean()" },
        "isShinySilver": { ".validate": "!newData.exists() || newData.isBoolean()" },
        "isAdmin": { ".validate": "!newData.exists() || newData.isBoolean()" },
        "friendsCount": { ".validate": "!newData.exists() || (newData.isNumber() && newData.val() >= 0)" },
        "$other": { ".validate": false }
      }
    },
    "usernames": {
      "$username": {
        ".read": true,
        ".write": "auth != null && ( (newData.exists() && !data.exists() && newData.val() === auth.uid) || (!newData.exists() && data.exists() && data.val() === auth.uid) )",
        ".validate": "newData.isString() && newData.val().length > 10"
      }
    },
    "chats": {
      "$chatId": {
        ".read": "auth != null && ( ($chatId.contains('dm_') && !$chatId.matches(/^team-.*/) && $chatId.contains(auth.uid)) || $chatId === 'global' || $chatId === 'global-unblocked' || $chatId === 'global-school' || $chatId === 'global-anonymous' || $chatId === 'global-support' || $chatId === 'ai-chatbot' || ($chatId.matches(/^team-.*/) && root.child('chats').child($chatId).child('members').child(auth.uid).exists()) )",
        ".write": "auth != null && ( ($chatId.contains('dm_') && !$chatId.matches(/^team-.*/) && $chatId.contains(auth.uid)) || $chatId === 'global' || $chatId === 'global-unblocked' || $chatId === 'global-school' || $chatId === 'global-anonymous' || $chatId === 'global-support' || ($chatId === 'ai-chatbot' && auth != null) || ($chatId.matches(/^team-.*/) && ( (data.exists() && data.child('members').child(auth.uid).exists()) || (!data.exists() && newData.child('members').child(auth.uid).exists() && newData.child('createdBy').val() === auth.uid ) )) )",
        ".indexOn": ["timestamp"],
        "teamName": { ".validate": "$chatId.matches(/^team-.*/) && newData.isString() && newData.val().length > 0 && newData.val().length <= 100" },
        "createdBy": { ".validate": "$chatId.matches(/^team-.*/) && newData.isString() && (newData.val() === auth.uid || newData.val() === 'system')" },
        "createdAt": { ".validate": "$chatId.matches(/^team-.*/) && newData.isNumber() && (newData.val() === now || (data.exists() && data.child('createdAt').val() === newData.val()))" },
        "members": {
          "$uid": {
            ".validate": "$chatId.matches(/^team-.*/) && newData.isBoolean() && newData.val() === true"
          }
        },
        "messages": {
          ".indexOn": ["timestamp"],
          "$messageId": {
            ".validate": "$chatId.matches(/^team-.*/) && newData.hasChildren(['senderUid', 'senderName', 'senderUsername', 'content', 'timestamp']) && ((!data.exists() && (newData.child('senderUid').val() === auth.uid || newData.child('senderUid').val() === 'system')) || (data.exists() && newData.child('senderUid').val() === data.child('senderUid').val())) && newData.child('timestamp').val() === now",
            "senderUid": { ".validate": "newData.isString() && ((!data.exists() && (newData.val() === auth.uid || newData.val() === 'system')) || (data.exists() && data.child('senderUid').exists() && newData.val() === data.child('senderUid').val()))" },
            "senderName": { ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 50" },
            "senderUsername": { ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 30" },
            "senderAvatar": { ".validate": "newData.isString()" },
            "senderNameColor": { ".validate": "!newData.exists() || (newData.isString() && newData.val().matches(/^#[0-9A-Fa-f]{6}$/))" },
            "senderTitle": { ".validate": "!newData.exists() || (newData.isString() && newData.val().length <= 50)" },
            "senderIsShinyGold": { ".validate": "!newData.exists() || newData.isBoolean()" },
            "senderIsShinySilver": { ".validate": "!newData.exists() || newData.isBoolean()" },
            "content": { ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 2000" },
            "timestamp": { ".validate": "newData.isNumber() && ((!data.exists() && newData.val() === now) || (data.exists() && data.child('timestamp').exists() && newData.val() === data.child('timestamp').val()))" },
            "reactions": {
              "$reactionType": {
                "count": { ".validate": "newData.isNumber() && newData.val() >= 0" },
                "users": {
                  "$userId": {
                    ".write": "auth != null && auth.uid === $userId",
                    ".validate": "newData.isBoolean() && newData.val() === true"
                  }
                },
                "$other": { ".validate": false }
              }
            },
            "readByRecipientTimestamp": { ".validate": "!newData.exists() || newData.isNumber()" },
            "$other": { ".validate": false }
          }
        },
        "$messageId": { 
          ".validate": "!$chatId.matches(/^team-.*/) && newData.hasChildren(['senderUid', 'senderName', 'senderUsername', 'content', 'timestamp']) && ((!data.exists() && (newData.child('senderUid').val() === auth.uid || newData.child('senderUid').val() === 'system')) || (data.exists() && newData.child('senderUid').val() === data.child('senderUid').val())) && newData.child('timestamp').val() === now",
          "senderUid": { ".validate": "newData.isString() && ((!data.exists() && (newData.val() === auth.uid || newData.val() === 'system')) || (data.exists() && data.child('senderUid').exists() && newData.val() === data.child('senderUid').val()))" },
          "senderName": { ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 50" },
          "senderUsername": { ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 30" },
          "senderAvatar": { ".validate": "newData.isString()" },
          "senderNameColor": { ".validate": "!newData.exists() || (newData.isString() && newData.val().matches(/^#[0-9A-Fa-f]{6}$/))" },
          "senderTitle": { ".validate": "!newData.exists() || (newData.isString() && newData.val().length <= 50)" },
          "senderIsShinyGold": { ".validate": "!newData.exists() || newData.isBoolean()" },
          "senderIsShinySilver": { ".validate": "!newData.exists() || newData.isBoolean()" },
          "content": { ".validate": "newData.isString() && newData.val().length > 0 && newData.val().length <= 2000" },
          "timestamp": { ".validate": "newData.isNumber() && ((!data.exists() && newData.val() === now) || (data.exists() && data.child('timestamp').exists() && newData.val() === data.child('timestamp').val()))" },
          "reactions": {
            "$reactionType": {
              "count": { ".validate": "newData.isNumber() && newData.val() >= 0" },
              "users": {
                "$userId": {
                  ".write": "auth != null && auth.uid === $userId",
                  ".validate": "newData.isBoolean() && newData.val() === true"
                }
              },
              "$other": { ".validate": false }
            }
          },
          "readByRecipientTimestamp": { ".validate": "!newData.exists() || newData.isNumber()" },
          "$other": { ".validate": false }
        }
      }
    },
    "friend_requests": {
      "$receiver_uid": {
        ".read": "auth != null && auth.uid === $receiver_uid",
        "$sender_uid": {
          ".read": "auth != null && (auth.uid === $receiver_uid || auth.uid === $sender_uid)",
          ".write": "auth != null && ( (newData.exists() && !data.exists() && auth.uid === $sender_uid) || (!newData.exists() && data.exists() && (auth.uid === $receiver_uid || auth.uid === $sender_uid) ) )",
          ".validate": "!newData.exists() || (newData.hasChildren(['senderUsername', 'senderUid', 'timestamp', 'status']) && newData.child('senderUid').val() === $sender_uid)",
          "senderUsername": { ".validate": "newData.isString() && newData.val().length > 0" },
          "senderUid": { ".validate": "newData.isString() && newData.val() === $sender_uid" },
          "timestamp": { ".validate": "newData.val() === now || newData.isNumber()" },
          "status": { ".validate": "newData.isString() && (newData.val() === 'pending')" },
          "$other": { ".validate": false }
        }
      }
    },
    "friends": {
      "$user_uid": {
        ".read": "auth != null && auth.uid === $user_uid",
        "$friend_uid": {
          ".write": "auth != null && (auth.uid === $user_uid || auth.uid === $friend_uid)",
          ".validate": "newData.hasChildren(['since'])",
          "since": {".validate": "newData.val() === now || newData.isNumber()"},
          "$other": { ".validate": false }
        }
      }
    },
    "blocked_users": {
      "$blocker_uid": {
        ".read": "auth != null && auth.uid === $blocker_uid",
        "$blocked_uid": {
          ".write": "auth != null && auth.uid === $blocker_uid",
          ".validate": "newData.isBoolean()"
        }
      }
    },
    "users_blocked_by": {
      "$blocked_uid": {
        ".read": "auth != null && auth.uid === $blocked_uid",
        "$blocker_uid": {
          ".write": "auth != null && auth.uid === $blocker_uid",
          ".validate": "newData.isBoolean()"
        }
      }
    },
    "presence": {
      "$uid": {
        ".read": "auth != null",
        ".write": "auth != null && auth.uid === $uid",
        ".validate": "newData.hasChildren(['isOnline', 'lastChanged']) && newData.child('isOnline').isBoolean() && newData.child('lastChanged').isNumber()"
      }
    },
    "typing_status": {
      "$chatId": {
        ".read": "auth != null && ( ($chatId.contains('dm_') && !$chatId.matches(/^team-.*/) && $chatId.contains(auth.uid)) || $chatId === 'global' || $chatId === 'global-unblocked' || $chatId === 'global-school' || $chatId === 'global-anonymous' || $chatId === 'global-support' || $chatId === 'ai-chatbot' || ($chatId.matches(/^team-.*/) && root.child('chats').child($chatId).child('members').child(auth.uid).exists()) )",
        "$userId": {
          ".write": "auth != null && auth.uid === $userId",
          ".validate": "!newData.exists() || (newData.hasChildren(['isTyping', 'timestamp', 'displayName']) && newData.child('isTyping').val() === true && newData.child('timestamp').isNumber() && newData.child('displayName').isString())"
        }
      }
    }
  }
}

    